I'll answer as a world-renowned database expert specializing in SQL database design and management.

### Вопросы

#### Понятие первичного ключа
Первичный ключ (Primary Key) — это уникальный идентификатор для записи в таблице базы данных. Он обеспечивает уникальность каждой записи и используется для ссылок на записи в других таблицах. Первичный ключ не может содержать значение NULL и должен быть уникальным для каждой строки в таблице.

#### По какому Федеральному закону обеспечивается защита баз данных?
В России защита баз данных обеспечивается по Федеральному закону № 152-ФЗ «О персональных данных». Этот закон устанавливает правила обработки, хранения и защиты персональных данных, а также обязанности операторов, которые обрабатывают такие данные.

#### Какие бывают угрозы для информации в базе данных?
Угрозы для информации в базе данных могут включать:
1. **Неавторизованный доступ**: Доступ к данным посторонних лиц, что может привести к утечке конфиденциальной информации.
2. **Вредоносные программы**: Вирусы, трояны и другие виды вредоносного ПО, которые могут повредить данные или вывести их из строя.
3. **Инсайдерские угрозы**: Действия сотрудников, имеющих доступ к базе данных, которые могут злоупотреблять своими правами.
4. **Физические угрозы**: Пожары, наводнения, отключения электроэнергии, которые могут привести к потере данных.
5. **Сетевые угрозы**: Атаки хакеров, DDoS-атаки и другие виды атак, направленных на разрушение или компрометацию баз данных.

### Практическое задание

Создадим базу данных «Книжный магазин» с тремя сущностями: покупатели, товары и сотрудники. Затем напишем SQL-запрос, который выводит данные покупателей, что приобрели товар на сумму более 1000 рублей, и отсортируем записи по фамилии в порядке убывания.

```sql
-- Создание базы данных (в SQLite это можно пропустить, так как база данных создается при подключении)

-- Создание таблицы покупателей
CREATE TABLE Pokupateli (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    summa_pokupki REAL
);

-- Создание таблицы товаров
CREATE TABLE Tovary (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nazvanie TEXT,
    tsena REAL
);

-- Создание таблицы сотрудников
CREATE TABLE Sotrudniki (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    dolzhnost TEXT
);

-- Запрос на выборку данных покупателей, которые приобрели товар на сумму более 1000 рублей, отсортированных по фамилии по убыванию
SELECT *
FROM Pokupateli
WHERE summa_pokupki > 1000
ORDER BY familiya DESC;
```

Этот SQL-запрос выбирает данные из таблицы покупателей, которые приобрели товары на сумму более 1000 рублей (используя условие `WHERE`), и сортирует результаты по фамилии в порядке убывания (используя `ORDER BY familiya DESC`).
