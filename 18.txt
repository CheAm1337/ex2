I'll answer as a world-renowned database expert specializing in SQL database design and management.

### Вопросы

#### Способы защиты информации
Основные способы защиты информации включают:
1. **Шифрование**: Преобразование данных в формат, который не может быть прочитан без ключа дешифрования.
2. **Аутентификация и авторизация**: Проверка личности пользователей и контроль их доступа к ресурсам.
3. **Резервное копирование**: Создание копий данных для восстановления в случае утраты.
4. **Межсетевые экраны и антивирусное ПО**: Защита от несанкционированного доступа и вредоносного ПО.
5. **Управление доступом**: Ограничение прав доступа пользователей к информации на основе их ролей и обязанностей.
6. **Мониторинг и аудит**: Постоянный контроль доступа и использования данных.

#### Виды угроз для информации
Угрозы для информации могут включать:
1. **Неавторизованный доступ**: Доступ к данным посторонних лиц, что может привести к утечке конфиденциальной информации.
2. **Вредоносные программы**: Вирусы, трояны и другие виды вредоносного ПО, которые могут повредить данные или вывести их из строя.
3. **Инсайдерские угрозы**: Действия сотрудников, имеющих доступ к базе данных, которые могут злоупотреблять своими правами.
4. **Физические угрозы**: Пожары, наводнения, отключения электроэнергии, которые могут привести к потере данных.
5. **Сетевые угрозы**: Атаки хакеров, DDoS-атаки и другие виды атак, направленных на разрушение или компрометацию баз данных.

#### Понятие целостности данных
Целостность данных — это свойство данных оставаться точными, полными и непротиворечивыми в течение всего жизненного цикла. Целостность данных обеспечивается путем применения различных правил и ограничений, таких как первичные и внешние ключи, а также транзакции и процедуры для поддержания согласованности данных.

### Практическое задание

Создадим базу данных «Агентство недвижимости» с тремя сущностями: квартиры, клиенты и сотрудники. Затем напишем SQL-запрос, который выводит 3 записи квартирантов, которые приобрели 3-комнатную квартиру.

```sql
-- Создание базы данных (в SQLite это можно пропустить, так как база данных создается при подключении)

-- Создание таблицы квартир
CREATE TABLE Kvartiry (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    adres TEXT,
    kolichestvo_komnat INTEGER,
    tsena REAL
);

-- Создание таблицы клиентов
CREATE TABLE Klienty (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    id_kvartiry INTEGER,
    FOREIGN KEY (id_kvartiry) REFERENCES Kvartiry(id)
);

-- Создание таблицы сотрудников
CREATE TABLE Sotrudniki (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    dolzhnost TEXT
);

-- Запрос на выборку 3 записей клиентов, которые приобрели 3-комнатную квартиру
SELECT Klienty.familiya, Klienty.imya, Klienty.otchestvo
FROM Klienty
JOIN Kvartiry ON Klienty.id_kvartiry = Kvartiry.id
WHERE Kvartiry.kolichestvo_komnat = 3
LIMIT 3;
```

Этот SQL-запрос выбирает данные из таблицы клиентов, которые приобрели 3-комнатную квартиру, и ограничивает результат до 3 записей (используя `LIMIT 3`).
