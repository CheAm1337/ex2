I'll answer as a world-renowned database expert specializing in SQL database design and management.

### Вопросы

#### Оператор SELECT
Оператор `SELECT` используется в SQL для извлечения данных из базы данных. С его помощью можно выбрать определенные столбцы из одной или нескольких таблиц, применить условия фильтрации, сортировать результаты и выполнять агрегацию данных.

#### Какой оператор SQL объединяет таблицы?
Оператор `JOIN` используется в SQL для объединения таблиц. Существует несколько типов объединений:
- **INNER JOIN**: Возвращает строки, которые имеют совпадающие значения в обеих таблицах.
- **LEFT JOIN** (или **LEFT OUTER JOIN**): Возвращает все строки из левой таблицы и совпадающие строки из правой таблицы. Если совпадения нет, возвращает `NULL` для правой таблицы.
- **RIGHT JOIN** (или **RIGHT OUTER JOIN**): Возвращает все строки из правой таблицы и совпадающие строки из левой таблицы. Если совпадения нет, возвращает `NULL` для левой таблицы.
- **FULL JOIN** (или **FULL OUTER JOIN**): Возвращает строки, которые имеют совпадающие значения в обеих таблицах, а также строки, которые не имеют совпадений в одной из таблиц.

#### Как вывести все записи таблицы при помощи SQL?
Для вывода всех записей таблицы используется оператор `SELECT * FROM table_name;`.

### Практическое задание

Создадим базу данных «Поликлиника» с четырьмя сущностями: пациенты, врачи, бесплатные услуги и платные услуги. Подключим документ Excel с прайс-листом к базе данных. Затем напишем SQL-запрос, который выводит пациентов, что осматриваются у хирурга и старше 18 лет.

```sql
-- Создание базы данных (в SQLite это можно пропустить, так как база данных создается при подключении)

-- Создание таблицы пациентов
CREATE TABLE Pacienty (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    vozrast INTEGER,
    vrach_id INTEGER,
    FOREIGN KEY (vrach_id) REFERENCES Vrachi(id)
);

-- Создание таблицы врачей
CREATE TABLE Vrachi (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    familiya TEXT,
    imya TEXT,
    otchestvo TEXT,
    spetsialnost TEXT
);

-- Создание таблицы бесплатных услуг
CREATE TABLE BesplatnyeUslugi (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nazvanie TEXT,
    opisanie TEXT
);

-- Создание таблицы платных услуг (прайс-лист загружается из Excel)
-- Подключение Excel документа к базе данных
-- SQLite не поддерживает прямое подключение Excel, поэтому импорт данных из Excel в таблицу SQLite
-- Например, можно использовать библиотеку sqlite3 в Python для импорта данных из Excel

-- Импорт данных из Excel в таблицу ПлатныеУслуги
-- Предположим, что таблица платных услуг создана следующим образом
CREATE TABLE PlatnyeUslugi (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nazvanie TEXT,
    opisanie TEXT,
    stoimost REAL
);

-- Запрос на выборку пациентов, что осматриваются у хирурга и старше 18 лет
SELECT Pacienty.*
FROM Pacienty
JOIN Vrachi ON Pacienty.vrach_id = Vrachi.id
WHERE Vrachi.spetsialnost = 'Хирург' AND Pacienty.vozrast > 18;
```

Этот SQL-запрос выбирает данные из таблицы пациентов, которые осматриваются у хирурга (используя `JOIN` для объединения таблиц пациентов и врачей по идентификатору врача) и старше 18 лет.
